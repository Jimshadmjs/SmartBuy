<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Orders Page</title>
    <link rel="stylesheet" href="/css/admin/category.css"> 
    <link rel="stylesheet" href="/css/admin/main.css">
    <link rel="stylesheet" href="/css/admin/order.css">
    <script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>

</head>
<body>
    <!-- Sidebar -->
    <%- include('partials/_sidebar') %>

    <!-- Main Content -->
    <div class="main-content">
        <%- include('partials/_header') %>
        <h2>Orders</h2>

        <div class="category-section">
            <table class="order-table">
                <thead>
                    <tr>
                        <th>Order ID</th>
                        <th>Customer</th>
                        <th>Status</th>
                        <th>Total Price</th>
                        <th>Payment Method</th>
                        <th>Payment Status</th> <!-- New column for Payment Status -->
                        <th>Date</th>
                        <th>Action</th>
                    </tr>
                </thead>
                <tbody>
                    <% orders.forEach(function(order) { %>
                    <tr>
                        <td><%= order._id %></td>
                        <td><%= order.userID.username %></td>
                        <td>
                            <% if (order.cancellationRequested) { %>
                                <span class="badge bg-info" style="cursor:pointer;" onclick="showCancellationModal('<%= order.cancellationReason %>', '<%= order._id %>')">Request</span>
                                <span class="dot" style="background-color: blue; display:inline-block; width:10px; height:10px; border-radius:50%; margin-left:5px;"></span>
                            <% } else if (order.orderStatus === 'Cancelled') { %>
                                <span class="badge bg-danger">Cancelled</span>
                            <% } else { %>
                                <%= order.orderStatus %>
                            <% } %>
                        </td>
                        <td>â‚¹<%= order.totalAmount %></td>
                        <td><%= order.paymentMethod %></td>
                        <td>
                            <% if (order.paymentStatus === 'Success') { %>
                                <span class="badge bg-success">Success</span>
                            <% } else if (order.paymentStatus === 'Failed') { %>
                                <span class="badge bg-danger">Failed</span>
                            <% } else if (order.paymentStatus === 'Refund') { %>
                                <span class="badge bg-danger">Refund</span>
                            <% } else { %>
                                <span class="badge bg-warning">Pending</span>
                            <% } %>
                        </td>
                        <td><%= new Date(order.orderDate).toLocaleDateString() %></td>
                        <td>
                            <div class="action-buttons">
                                <% if (order.orderStatus !== 'Cancelled') { %>
                                    <select class="status-select" onchange="changeOrderStatus('<%= order._id %>', this.value)">
                                        <option value="Pending" <%= order.orderStatus === 'Pending' ? 'selected' : '' %>>Pending</option>
                                        <option value="Processing" <%= order.orderStatus === 'Processing' ? 'selected' : '' %>>Processing</option>
                                        <option value="Shipped" <%= order.orderStatus === 'Shipped' ? 'selected' : '' %>>Shipped</option>
                                        <option value="Delivered" <%= order.orderStatus === 'Delivered' ? 'selected' : '' %>>Delivered</option>
                                        <option value="Cancelled" <%= order.orderStatus === 'Cancelled' ? 'selected' : '' %>>Cancelled</option>
                                    </select>
                                <% } else { %>
                                    <span class="text-muted">Cannot Change</span>
                                <% } %>
                                <button class="btn btn-primary viewOrder" data-id="<%= order._id %>">View</button> <!-- Moved here -->
                            </div>
                        </td>
                    </tr>
                    <% }); %>
                </tbody>
            </table>
        </div>
        

        <!-- Pagination -->
        <div class="pagination">
            <% if (currentPage > 1) { %>
                <a href="?page=<%= currentPage - 1 %>">Previous</a>
            <% } %>
            <% for (let i = 1; i <= totalPages; i++) { %>
                <a href="?page=<%= i %>" class="<%= currentPage === i ? 'active' : '' %>"><%= i %></a>
            <% } %>
            <% if (currentPage < totalPages) { %>
                <a href="?page=<%= currentPage + 1 %>">Next</a>
            <% } %>
        </div>

        <!-- Cancellation Reason Modal -->
        <div class="modal" id="cancellationModal">
            <div class="modal-content">
                <span class="close" onclick="closeModal()">&times;</span>
                <h5 id="reason">Cancellation Reason</h5>
                <p id="cancellationReasonText"></p>
                
                <button id="approveCancellationBtn">Approve Cancellation</button>
                <button onclick="closeModal()">Close</button>
            </div>
        </div>
        
    </div>





    <!-- Order Details Modal -->
<div id="orderDetailModal" class="custom-modal" style="display: none;">
    <div class="custom-modal-content">
        <span id="closeModal" class="custom-close">&times;</span>
        <h2>Order Details</h2>
        <table class="order-details-table">
            <tr>
                <th>Order Date</th>
                <td><span id="orderedDate"></span> <span id="orderTime"></span></td>
            </tr>
            <tr>
                <th>Order Status</th>
                <td><span id="orderStatus"></span></td>
            </tr>
            <tr>
                <th>Shipping Address</th>
                <td><span id="shippingAddress"></span></td>
            </tr>
        </table>

        <h3>Products Ordered</h3>
        <div id="orderedProducts" class="products-container"></div>

        <table class="order-total-table">
            <tr>
                <th>Total Amount</th>
                <td><span id="totalAmount"></span></td>
            </tr>
        </table>
    </div>
</div>




    <script> 
        function changeOrderStatus(orderId, newStatus) {
            axios.put(`/admin/orders/${orderId}/status`, { status: newStatus })
                .then(response => {
                    console.log('Status updated successfully:', response.data);
                    location.reload();
                })
                .catch(error => {
                    console.error('Error updating status:', error);
                    alert('Failed to update status. Please try again.');
                });
        }

        function showCancellationModal(reason, orderId) {
            console.log('Cancellation Reason:', reason); 
            document.getElementById('cancellationReasonText').innerText = reason; 
            document.getElementById('cancellationModal').style.display = "block"; 
            
            const approveBtn = document.getElementById('approveCancellationBtn');
            approveBtn.onclick = function() {
                approveCancellation(orderId);
                closeModal(); 
            };
        }

        function closeModal() {
            document.getElementById('cancellationModal').style.display = "none"; 
        }

        function approveCancellation(orderId) {
            axios.post(`/admin/orders/${orderId}/approve-cancellation`)
                .then(response => {
                    console.log('Cancellation approved successfully:', response.data);
                    location.reload(); 
                    
                })
                .catch(error => {
                    console.error('Error approving cancellation:', error);
                    alert('Failed to approve cancellation. Please try again.');
                });
        }



        document.addEventListener('DOMContentLoaded', function () {
    const viewOrderButtons = document.querySelectorAll('.viewOrder');
    const orderModal = document.getElementById('orderDetailModal');
    const closeModalButton = document.getElementById('closeModal');

    viewOrderButtons.forEach(button => {
        button.addEventListener('click', function () {
            const orderId = this.getAttribute('data-id');

            // Fetch order details using Axios
            axios.get(`/order/details/${orderId}`)
                .then(response => {
                    const order = response.data;

                    // Populate the modal with order details
                    const orderedDate = new Date(order.orderedDate);
                    const options = { day: '2-digit', month: '2-digit', year: 'numeric' };
                    document.getElementById('orderedDate').innerText = orderedDate.toLocaleDateString('en-IN', options);
                    document.getElementById('orderTime').innerText = orderedDate.toLocaleTimeString();
                    document.getElementById('orderStatus').innerText = order.orderStatus;
                    document.getElementById('shippingAddress').innerText = 
                        `${order.shippingAddress.fullname}, ${order.shippingAddress.address}, ${order.shippingAddress.pincode}`;

                    const productsContainer = document.getElementById('orderedProducts');
                    productsContainer.innerHTML = ''; // Clear previous content

                    order.items.forEach(item => {
                        productsContainer.innerHTML += `
                            <div class="col-md-4">
                                <div class="card">
                                    <img src="/${item.productID.images[0]}" alt="${item.productID.name}">
                                    <div class="card-body">
                                        <h5 class="card-title">${item.productID.name}</h5>
                                        <p class="card-text">Price: â‚¹${item.productID.price}</p>
                                        <p class="card-text">Quantity: ${item.quantity}</p>
                                    </div>
                                </div>
                            </div>
                        `;
                    });

                    document.getElementById('totalAmount').innerText = `â‚¹${order.totalAmount}`;

                    // Show the modal
                    orderModal.style.display = 'block';
                })
                .catch(error => {
                    console.error('Error fetching order details:', error);
                    alert('An error occurred while fetching order details.');
                });
        });
    });

    // Close the modal when clicking the close button or outside the modal
    closeModalButton.addEventListener('click', () => {
        orderModal.style.display = 'none';
    });

    window.addEventListener('click', (event) => {
        if (event.target === orderModal) {
            orderModal.style.display = 'none';
        }
    });
});




    </script>
</body>
</html>
