<!DOCTYPE html>
<html lang="en">
<head>
	<title>Shoping Cart</title>
	<meta charset="UTF-8">
	<meta name="viewport" content="width=device-width, initial-scale=1">
<!--===============================================================================================-->	
	<link rel="icon" type="image/png" href="/images/icons/favicon.png"/>
<!--===============================================================================================-->
	<link rel="stylesheet" type="text/css" href="/vendor/bootstrap/css/bootstrap.min.css">
<!--===============================================================================================-->
	<link rel="stylesheet" type="text/css" href="/fonts/font-awesome-4.7.0/css/font-awesome.min.css">
<!--===============================================================================================-->
	<link rel="stylesheet" type="text/css" href="/fonts/iconic/css/material-design-iconic-font.min.css">
<!--===============================================================================================-->
	<link rel="stylesheet" type="text/css" href="/fonts/linearicons-v1.0.0/icon-font.min.css">
<!--===============================================================================================-->
	<link rel="stylesheet" type="text/css" href="/vendor/animate/animate.css">
<!--===============================================================================================-->	
	<link rel="stylesheet" type="text/css" href="/vendor/css-hamburgers/hamburgers.min.css">
<!--===============================================================================================-->
	<link rel="stylesheet" type="text/css" href="/vendor/animsition/css/animsition.min.css">
<!--===============================================================================================-->
	<link rel="stylesheet" type="text/css" href="/vendor/select2/select2.min.css">
<!--===============================================================================================-->
	<link rel="stylesheet" type="text/css" href="/vendor/perfect-scrollbar/perfect-scrollbar.css">
<!--===============================================================================================-->
	<link rel="stylesheet" type="text/css" href="/css/util.css">
	<link rel="stylesheet" type="text/css" href="/css/main.css">
<!--===============================================================================================-->
<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/css/bootstrap.min.css" rel="stylesheet">
<!-- Bootstrap Icons -->
<link href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.8.1/font/bootstrap-icons.css" rel="stylesheet">
<!-- Axios -->
<script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>

<style>
    .checkout-container {
        padding: 20px 0;
    }

    .order-items {
        max-height: 300px;
        overflow-y: auto;
    }

    .order-item img {
        width: 70px;
        margin-right: 10px;
    }

    .order-item p {
        margin: 0;
    }

    .btn-block {
        width: 100%;
    }
    .custom-modal {
    display: none; 
    position: fixed; 
    z-index: 1050; 
    left: 0;
    top: 0;
    width: 100%; 
    height: 100%; 
    overflow: hidden; 
    background-color: rgba(0, 0, 0, 0.7); 
}

.modal-dialog {
    position: absolute;
    top: 50%; 
    left: 50%; 
    transform: translate(-50%, -50%); 
    max-width: 600px; 
    width: 100%; 
    border-radius: 8px;
    box-shadow: 0 5px 15px rgba(0, 0, 0, 0.3); 
}

.modal-content {
    border-radius: 8px; 
    overflow: hidden; 
}

.modal-header {
    background-color: #007bff; 
    color: white; 
    padding: 15px; 
    border-bottom: 1px solid #ddd; 
    display: flex; 
    justify-content: space-between; 
    align-items: center; 
}

.btn-close {
    background: none; /* Remove default button styles */
    border: none; /* Remove border */
    font-size: 1.5rem; /* Increase icon size */
    color: white; /* White color for the close icon */
    cursor: pointer; /* Pointer cursor on hover */
}

.modal-body {
    padding: 20px; /* Add padding */
    background-color: #f8f9fa; /* Light gray background */
}

.list-group-item {
    font-size: 1rem; /* Standard font size */
    padding: 10px 15px; /* Padding for list items */
    border: none; /* Remove borders */
    border-bottom: 1px solid #ddd; /* Light border between items */
    transition: background-color 0.2s; /* Smooth background transition */
}

.list-group-item:hover {
    background-color: #f1f1f1; /* Slight hover effect */
}

.empty-message {
    text-align: center; /* Center align text */
    font-style: italic; /* Italicized text */
    color: #6c757d; /* Muted color for emphasis */
    margin-top: 10px; /* Add some margin on top */
}

.modal-footer {
    padding: 10px 15px; /* Add padding */
    background-color: #f8f9fa; /* Light gray background */
    border-top: 1px solid #ddd; /* Light border at the top */
    text-align: right; /* Right align the buttons */
}

.btn {
    padding: 8px 16px; 
    font-size: 0.9rem; 
    border-radius: 4px; 
    cursor: pointer; 
}

.btn-secondary {
    background-color: #6c757d; /* Secondary button color */
    color: white; /* White text */
    border: none; /* Remove border */
    transition: background-color 0.2s; /* Smooth background transition */
}

.btn-secondary:hover {
    background-color: #5a6268; /* Darker shade on hover */
}

</style>

</style>
</head>
<body class="animsition">


<!-- Include header partial -->
<%- include('partials/_header') %>


<br>
<br>

<div class="container my-5">
    <div class="row">
        <!-- Left Side - Saved Addresses and Shipping Information -->
        <div class="col-md-6 mb-4">
            <h2>Shipping Information</h2>

            <!-- Select Saved Address -->
            <h4 class="mt-4">Select Address</h4>
            <form id="checkoutForm" action="/checkout/submit/<%= user._id %>" method="POST" onsubmit="return validateForm()">
                <div class="form-group">
                    <label for="addressSelect">Saved Addresses</label>
                    <select id="addressSelect" name="selectedAddress" class="form-control" onchange="populateAddress()">
                        <option value="">Select an address</option>
                        <% addresses.forEach(address => { %>
                            <option value="<%= address._id %>" 
                                    data-fullname="<%= address.fullName %>" 
                                    data-address="<%= address.address %>,<%= address.state %>,<%= address.district %> ,<%= address.city %>" 
                                    data-pincode="<%= address.pincode %>" 
                                    data-phone="<%= address.phone %>">
                                <%= address.fullName %>, <%= address.address %>,<%= address.state %>,<%= address.district %> ,<%= address.city %>,<%= address.pincode %>, <%= address.phone %>
                            </option>
                        <% }) %>
                    </select>
                    <small id="addressError" class="text-danger" style="display:none;"></small>
                </div>

                <!-- Shipping Info -->
                <h4 class="mt-4">Or Enter New Address</h4>
                <div class="form-group">
                    <label for="fullName">Full Name</label>
                    <input type="text" id="fullName" name="fullName" placeholder="Full Name" class="form-control" />
                    <small id="nameError" class="text-danger" style="display:none;"></small>
                </div>
                <div class="form-group">
                    <label for="address">Address</label>
                    <input type="text" id="address" name="address" placeholder="Address,state,district,place" class="form-control" />
                    <small id="addressFieldError" class="text-danger" style="display:none;"></small>
                </div>
                <div class="form-group">
                    <label for="pincode">Pincode</label>
                    <input type="text" id="pincode" name="pincode" placeholder="Pincode" class="form-control" />
                    <small id="pincodeError" class="text-danger" style="display:none;"></small>
                </div>
                <div class="form-group">
                    <label for="phone">Phone Number</label>
                    <input type="text" id="phone" name="phone" placeholder="Phone Number" class="form-control" />
                    <small id="phoneError" class="text-danger" style="display:none;"></small>
                </div>

                <!-- Payment Method -->
                <h4 class="mt-4">Payment Method</h4>
                <div class="form-check">
                    <input class="form-check-input" type="radio" name="paymentMethod" id="bankTransfer" value="bankTransfer" required />
                    <label class="form-check-label" for="bankTransfer">Bank Transfer</label>
                </div>
                <div class="form-check">
                    <input class="form-check-input" type="radio" name="paymentMethod" id="cashOnDelivery" value="cashOnDelivery" required />
                    <label class="form-check-label" for="cashOnDelivery">Cash on Delivery</label>
                </div>

                <!-- Place Order Button -->
                <button type="submit" class="btn btn-success btn-block mt-4">Place Order</button>
            </form>
        </div>

        <!-- Right Side - Order Summary -->
        <div class="col-md-6 mb-4">
            <h2>Order Summary</h2>

            <!-- Order Items -->
            <div class="order-items border p-3 rounded mb-4">
                <% cartItems.forEach(item => { %>
                    <div class="order-item d-flex justify-content-between align-items-center mb-3">
                        <div class="d-flex align-items-center">
                            <img src="/<%= item.imageUrl %>" alt="<%= item.productName %>" class="img-fluid" style="width: 70px; margin-right: 10px;" />
                            <div>
                                <p class="mb-0"><%= item.productName %></p>
                                <small>₹<%= item.price %> x <%= item.quantity %></small>
                            </div>
                        </div>
                        <p class="mb-0 font-weight-bold">₹<%= item.price * item.quantity %></p>
                    </div>
                <% }) %>
            </div>

            <!-- Subtotal, Discount, Delivery Fee, and Total -->
            <div class="border p-3 rounded">
                <div class="d-flex justify-content-between">
                    <span>Subtotal:</span>
                    <span>₹<%= cartSubtotal %></span>
                </div>
                <div class="d-flex justify-content-between">
                    <span>Discount:</span>
                    <span>- ₹<%= discount %></span>
                </div>
                <div class="d-flex justify-content-between">
                    <span>Delivery Fee:</span>
                    <span>₹<%= deliveryFee %></span>
                </div>
                <div class="d-flex justify-content-between font-weight-bold mt-2">
                    <span>Total:</span>
                    <span>₹<%= total %></span>
                </div>
                <br>
                <div class="flex-w flex-sb-m bor15 p-t-18 p-b-15 p-lr-40 p-lr-15-sm">


                    <% if (coupon) {%> 

                        <div class="flex-w flex-m m-r-20 m-tb-5">
                            <input id="removeCouponCodeInput" class="stext-104 cl2 plh4 size-117 bor13 p-lr-20 m-r-10 m-tb-5" type="text" placeholder="Coupon Code" value="<%= coupon %>">
                            <div class="flex-c-m stext-101 cl2 size-118 bg8 bor13 hov-btn3 p-lr-15 trans-04 pointer m-tb-5" onclick="removeCoupon()">
                                Remove Coupon
                            </div>
                        </div>
                        <div class="error-message" id="couponCodeError"></div>
                        <div class="success-message" id="couponSuccessMessage"></div>
                        
                    <%} else {%> 
                        <div class="flex-w flex-m m-r-20 m-tb-5">
                            <input id="couponCodeInput" class="stext-104 cl2 plh4 size-117 bor13 p-lr-20 m-r-10 m-tb-5" type="text" placeholder="Coupon Code">
                            <div class="flex-c-m stext-101 cl2 size-118 bg8 bor13 hov-btn3 p-lr-15 trans-04 pointer m-tb-5" onclick="applyCoupon()">
                                Apply Coupon
                            </div>
                        </div>
                        <div class="error-message" id="couponCodeError"></div>
                        <div class="success-message" id="couponSuccessMessage"></div>

                    <% } %>
                </div>
            </div>
            

            <div class="container mt-5">
                <button id="showCouponsBtn" class="btn btn-primary">Show Available Coupons</button>
            </div>
        
           <!-- Custom Modal -->
<div class="custom-modal" id="couponsModal" tabindex="-1" aria-labelledby="couponsModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="couponsModalLabel">Available Coupons</h5>
                <button type="button" class="btn-close" aria-label="Close" onclick="closeModal()"></button>
            </div>
            <div class="modal-body">
                <ul id="couponsList" class="list-group"></ul>
                <p class="empty-message" id="emptyMessage" style="display: none;">No coupons available at the moment.</p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" onclick="closeModal()">Close</button>
            </div>
        </div>
    </div>
</div>

        


        </div>
    </div>
    
</div>



<!-- Include footer partial -->
<%- include('partials/_footer') %>




<!--===============================================================================================-->	
<script src="/vendor/jquery/jquery-3.2.1.min.js"></script>
<!--===============================================================================================-->
	<script src="/vendor/animsition/js/animsition.min.js"></script>
<!--===============================================================================================-->
	<script src="/vendor/bootstrap/js/popper.js"></script>
	<script src="/vendor/bootstrap/js/bootstrap.min.js"></script>
<!--===============================================================================================-->
	<script src="/vendor/select2/select2.min.js"></script>
	<script>
		$(".js-select2").each(function(){
			$(this).select2({
				minimumResultsForSearch: 20,
				dropdownParent: $(this).next('.dropDownSelect2')
			});
		})
	</script>
<!--===============================================================================================-->
	<script src="/vendor/MagnificPopup/jquery.magnific-popup.min.js"></script>
<!--===============================================================================================-->
	<script src="/vendor/perfect-scrollbar/perfect-scrollbar.min.js"></script>
	<script>
		$('.js-pscroll').each(function(){
			$(this).css('position','relative');
			$(this).css('overflow','hidden');
			var ps = new PerfectScrollbar(this, {
				wheelSpeed: 1,
				scrollingThreshold: 1000,
				wheelPropagation: false,
			});

			$(window).on('resize', function(){
				ps.update();
			})
		});
	</script>
<!--===============================================================================================-->
	<script src="/js/main.js"></script>
	<script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
	<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

    <script src="https://checkout.razorpay.com/v1/checkout.js"></script>

    


    <script>
        // Existing functions...
    
        function populateAddress() {
            var selectedOption = document.getElementById('addressSelect').selectedOptions[0];
    
            // Get data attributes
            var fullName = selectedOption.getAttribute('data-fullname');
            var address = selectedOption.getAttribute('data-address');
            var pincode = selectedOption.getAttribute('data-pincode');
            var phone = selectedOption.getAttribute('data-phone');
    
            // Populate the form fields
            document.getElementById('fullName').value = fullName;
            document.getElementById('address').value = address;
            document.getElementById('pincode').value = pincode;
            document.getElementById('phone').value = phone;
        }
    
        function validateForm() {
            let valid = true;
            clearErrors();
    
            // Validate Full Name
            const fullName = document.getElementById('fullName').value.trim();
            if (fullName === "") {
                showError('nameError', 'Full Name is required.');
                valid = false;
            }
    
            // Validate Address
            const address = document.getElementById('address').value.trim();
            const addressRegex = /^[^,]+,[^,]+,[^,]+,[^,]+$/; // Matches "Address,state,district,place"
    
            if (address === "") {
                showError('addressFieldError', 'Address is required.');
                valid = false;
            } else if (!addressRegex.test(address)) {
                showError('addressFieldError', 'Address must be in the format: Address,state,district,place.');
                valid = false;
            }
    
            // Validate Pincode
            const pincode = document.getElementById('pincode').value.trim();
            if (pincode === "") {
                showError('pincodeError', 'Pincode is required.');
                valid = false;
            } else if (!/^\d{6}$/.test(pincode)) {
                showError('pincodeError', 'Pincode must be 6 digits.');
                valid = false;
            }
    
            // Validate Phone Number
            const phone = document.getElementById('phone').value.trim();
            if (phone === "") {
                showError('phoneError', 'Phone Number is required.');
                valid = false;
            } else if (!/^\d+$/.test(phone)) {
                showError('phoneError', 'Phone Number must be numeric.');
                valid = false;
            }
    
            return valid;
        }
    
        function showError(elementId, message) {
            const errorElement = document.getElementById(elementId);
            errorElement.textContent = message;
            errorElement.style.display = 'block';
            setTimeout(() => {
                errorElement.style.display = 'none';
            }, 3000);
        }
    
        function clearErrors() {
            const errorElements = document.querySelectorAll('.text-danger');
            errorElements.forEach(el => {
                el.textContent = '';
                el.style.display = 'none';
            });
        }
    
        document.getElementById('checkoutForm').addEventListener('submit', function (event) {
            event.preventDefault();
    
            // Validate form
            if (validateForm()) {
                const selectedAddress = document.getElementById('addressSelect').value;
                const fullName = document.getElementById('fullName').value;
                const address = document.getElementById('address').value;
                const pincode = document.getElementById('pincode').value;
                const phone = document.getElementById('phone').value;
                const paymentMethod = document.querySelector('input[name="paymentMethod"]:checked').value;
    
                // Create the body to send
                const requestBody = {
                    selectedAddress,
                    fullName,
                    address,
                    pincode,
                    phone,
                    paymentMethod
                };
    
                // Submit the form via Axios
                axios.post(`/checkout/submit/<%= user._id %>`, requestBody)
    .then(response => {
        const { orderId, razorpayOrderId, totalAmount } = response.data;

        if (paymentMethod === 'bankTransfer' && razorpayOrderId) {
           
            const options = {
                key: 'rzp_test_gFsEtsAPkYQ4Fd', 
                amount: totalAmount * 100,
                currency: 'INR',
                name: 'SmartBuy',
                description: 'Test Transaction',
                order_id: razorpayOrderId,
                handler: function (paymentResponse) {
                    // Payment successful, update backend
                    axios.post(`/payment/success/${orderId}`, {
                        paymentId: paymentResponse.razorpay_payment_id
                    }).then(() => {
                        alert('Payment successful! Payment ID: ' + paymentResponse.razorpay_payment_id);
                        window.location.href = `/order/confirmation/${orderId}`;
                    }).catch(err => {
                    });
                },
                prefill: {
                    name: fullName,
                    email: 'email@example.com', 
                    contact: phone
                },
                theme: {
                    color: '#F37254'
                }
            };

            const rzp1 = new Razorpay(options);

            
            rzp1.on('payment.failed', function (response) {
                Swal.fire({
                    icon: 'error',
                    title: 'Payment Failed',
                    text: 'Your payment failed. Please try again.',
                });

                // Update backend on payment failure
                axios.post(`/payment/failure/${orderId}`, {
                    paymentId: response.error.metadata.payment_id
                }).then(() => {
                    window.location.href = '/profile';
                }).catch(err => {
                });
            });

            rzp1.open();
        } else {
            // For COD, redirect to order confirmation directly
            window.location.href = `/order/confirmation/${orderId}`;
        }
    })
    .catch(error => {
        if (error.response && error.response.data.message) {
            Swal.fire({
                icon: 'error',
                title: 'Error',
                text: error.response.data.message,
            });
        } else {
            Swal.fire({
                icon: 'error',
                title: 'Error',
                text: 'An error occurred while processing your order.',
            });
        }

    });

}})
    </script>
    

    <script>
        async function applyCoupon() {
            const couponCode = document.getElementById('couponCodeInput').value;
            
            if (!couponCode) {
                Swal.fire({
                    icon: 'error',
                    title: 'Invalid Input',
                    text: 'Please enter a coupon code.',
                });
                return;
            }
    
            try {
    const response = await axios.post('/cart/applyCoupon', { couponCode });

    if (response.status === 200 && response.data.newTotal) {
        
        Swal.fire({
            icon: 'success',
            title: 'Success',
            text: response.data.message,
        }).then(() => {
            location.reload();
        });
    } else {
        // Handle error message from the server
        Swal.fire({
            icon: 'error',
            title: 'Error',
            text: response.data.message || 'An unexpected error occurred.',
        });
    }
    } catch (error) {
        // Handle errors thrown by the axios call itself (network errors, etc.)
        Swal.fire({
            icon: 'error',
            title: 'Error',
            text: error.response?.data?.message || 'Error applying coupon. Please try again.',
        });
    }

        }


        async function removeCoupon() {
            const couponCode = document.getElementById('removeCouponCodeInput').value;
            try {
                const response = await axios.post('/cart/removeCoupon', { couponCode });
                if (response.status === 200 && response.data.newTotal) {
        
        Swal.fire({
            icon: 'success',
            title: 'Success',
            text: response.data.message,
        }).then(() => {
            location.reload();
        });
    } else {
        // Handle error message from the server
        Swal.fire({
            icon: 'error',
            title: 'Error',
            text: response.data.message || 'An unexpected error occurred.',
        });
    }
    } catch (error) {
        // Handle errors thrown by the axios call itself (network errors, etc.)
        Swal.fire({
            icon: 'error',
            title: 'Error',
            text: error.response?.data?.message || 'Error Please try again.',
        });
    }
        }
    </script>
    
    <script>
        document.getElementById('showCouponsBtn').addEventListener('click', async function() {
            try {
                const response = await axios.get('/show/coupons');
                const coupons = response.data;

                const couponsList = document.getElementById('couponsList');
                couponsList.innerHTML = '';

                if (coupons.length === 0) {
                    const listItem = document.createElement('li');
                    listItem.className = 'list-group-item';
                    listItem.textContent = 'No Available Coupons For You!';
                    couponsList.appendChild(listItem);
                } else {
                    coupons.forEach(coupon => {
                        const listItem = document.createElement('li');
                        listItem.className = 'list-group-item';
                        listItem.innerHTML = `
                    <div><strong>Coupon Code:</strong> ${coupon.couponCode}</div>
                    <div><strong>Discount:</strong> ${coupon.discountType} : ${coupon.discountAmount}</div>
                    <div><strong>Min Purchase Amount:</strong> ₹${coupon.minAmount}</div>
                    <div><strong>Max Purchase Amount:</strong> ₹${coupon.maxAmount}</div>
                    <div><strong>Expires On:</strong> ${new Date(coupon.endDate).toLocaleDateString()}</div>
                `;
                        couponsList.appendChild(listItem);
                    });
                }

                // Show the custom modal
                showModal();

            } catch (error) {
                const couponsList = document.getElementById('couponsList');
                couponsList.innerHTML = '<li class="list-group-item text-danger">Failed to load coupons.</li>';
            }
        });

        function showModal() {
            const modalElement = document.getElementById('couponsModal');
            modalElement.classList.add('show');
            modalElement.style.display = 'block';
            modalElement.setAttribute('aria-hidden', 'false');
            document.body.style.overflow = 'hidden'; // Disable background scrolling
        }

        function closeModal() {
            const modalElement = document.getElementById('couponsModal');
            modalElement.classList.remove('show');
            modalElement.style.display = 'none';
            modalElement.setAttribute('aria-hidden', 'true');
            document.body.style.overflow = 'auto'; // Re-enable background scrolling
        }
    </script>