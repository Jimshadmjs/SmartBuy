<!DOCTYPE html>
<html lang="en">
<head>
    <title>Wishlist</title>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <link rel="icon" type="image/png" href="/images/icons/favicon.png"/>
    <link rel="stylesheet" type="text/css" href="/vendor/bootstrap/css/bootstrap.min.css">
    <link rel="stylesheet" type="text/css" href="/fonts/font-awesome-4.7.0/css/font-awesome.min.css">
    <link rel="stylesheet" type="text/css" href="/fonts/iconic/css/material-design-iconic-font.min.css">
    <link rel="stylesheet" type="text/css" href="/fonts/linearicons-v1.0.0/icon-font.min.css">
    <link rel="stylesheet" type="text/css" href="/vendor/animate/animate.css">
    <link rel="stylesheet" type="text/css" href="/vendor/css-hamburgers/hamburgers.min.css">
    <link rel="stylesheet" type="text/css" href="/vendor/animsition/css/animsition.min.css">
    <link rel="stylesheet" type="text/css" href="/vendor/select2/select2.min.css">
    <link rel="stylesheet" type="text/css" href="/vendor/perfect-scrollbar/perfect-scrollbar.css">
    <link rel="stylesheet" type="text/css" href="/css/util.css">
    <link rel="stylesheet" type="text/css" href="/css/main.css">
    <link rel="stylesheet" type="text/css" href="/css/wishlist.css">

    

</head>
<body class="animsition">

<!-- Include header partial -->
<%- include('partials/_header') %>
<br>
<br>
<div class="container my-5">
    <div id="wishlist" class="section">
        <h2>Wishlist</h2>
        <br>
        <% if (wishlist && wishlist.items.length > 0) { %>
            <div class="row">
                <% wishlist.items.forEach(item => { 
                    const product = item.productID; %>
                    <div class="col-sm-6 col-md-4 col-lg-3 p-b-35 wishlist-item" data-product-id="<%= product._id %>">
                        <div class="card h-100">
                            <a href="/product_details/<%= product._id %>">
                                <img src="<%= product.images[0] %>" class="card-img-top img-fluid product-image-wishlist" alt="Product Image">
                            </a>
                            <div class="card-body">
                                <h5 class="card-title">
                                    <a href="/product_details/<%= product._id %>" class="text-dark">
                                        <strong><%= product.name %> <br></strong>
                                        <% if (product.categoryID) { %>
                                            <%= product.categoryID.name %>
                                        <% } %>
                                    </a>
                                </h5>
                                <p class="card-text">
                                    <% if (product.offer) { %>
                                        <span style="text-decoration: line-through; color: red;">₹<%= product.price %></span>
                                        <span style="color: green;">₹<%= product.bestOfferPrice %></span>
                                    <% } else { %>
                                        <span>₹<%= product.price %></span>
                                    <% } %>
                                </p>
                            </div>
                            <div class="card-footer d-flex justify-content-between bg-transparent border-top-0">
                                <button class="btn btn-outline-danger btn-sm remove-wishlist-btn" data-product-id="<%= product._id %>">
                                    <i class="bi bi-heart"></i> Remove
                                </button>
                                <button class="btn btn-outline-primary btn-sm add-to-cart" 
                                data-image="<%= product.images[0] %>" 
                                data-id="<%= product._id %>" 
                                data-name="<%= product.name %>" 
                                data-price="<%= product.price %>">
                            <i class="bi bi-cart"></i> Add to Cart
                        </button>
                            </div>
                        </div>
                    </div>
                <% }); %>
            </div>
        <% } else { %>
            <p>No items in your wishlist.</p>
        <% } %>
    </div>
</div>

<!-- Include footer partial -->
<%- include('partials/_footer') %>

<!-- JS Libraries -->


<!--===============================================================================================-->	
<script src="/vendor/jquery/jquery-3.2.1.min.js"></script>
<!--===============================================================================================-->
	<script src="/vendor/animsition/js/animsition.min.js"></script>
<!--===============================================================================================-->
	<script src="/vendor/bootstrap/js/popper.js"></script>
	<script src="/vendor/bootstrap/js/bootstrap.min.js"></script>
<!--===============================================================================================-->
	<script src="/vendor/select2/select2.min.js"></script>
	<script>
		$(".js-select2").each(function(){
			$(this).select2({
				minimumResultsForSearch: 20,
				dropdownParent: $(this).next('.dropDownSelect2')
			});
		})
	</script>
<!--===============================================================================================-->
	<script src="/vendor/MagnificPopup/jquery.magnific-popup.min.js"></script>
<!--===============================================================================================-->
	<script src="/vendor/perfect-scrollbar/perfect-scrollbar.min.js"></script>
	<script>
		$('.js-pscroll').each(function(){
			$(this).css('position','relative');
			$(this).css('overflow','hidden');
			var ps = new PerfectScrollbar(this, {
				wheelSpeed: 1,
				scrollingThreshold: 1000,
				wheelPropagation: false,
			});

			$(window).on('resize', function(){
				ps.update();
			})
		});
	</script>
<!--===============================================================================================-->
	<script src="/js/main.js"></script>
	<script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
	<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>


    <script>
        // Add event listener to remove item buttons
        document.querySelectorAll('.remove-wishlist-btn').forEach(button => {
        button.addEventListener('click', async (e) => {
            const productID = e.target.closest('.wishlist-item').dataset.productId;
    
            try {
                const result = await Swal.fire({
                    title: 'Are you sure?',
                    text: 'Do you want to remove this item from your wishlist?',
                    icon: 'warning',
                    showCancelButton: true,
                    confirmButtonColor: '#3085d6',
                    cancelButtonColor: '#d33',
                    confirmButtonText: 'Yes, remove it!',
                });
    
                if (result.isConfirmed) {
                    const response = await axios.delete('/wishlist/remove', {
                        data: { userID: '<%= user._id %>', productID } // Send userID and productID
                    });
    
                    if (response.status === 200) {
                        Swal.fire(
                            'Removed!',
                            'The item has been removed from your wishlist.',
                            'success'
                        );
                        // Remove the item from the DOM
                        e.target.closest('.wishlist-item').remove();
                    } else {
                        Swal.fire('Oops!', response.data.message, 'error');
                    }
                }
            } catch (error) {
                console.error('Error removing item from wishlist:', error);
                Swal.fire('Error!', 'An error occurred while removing the item.', 'error');
            }
        });
    });
</script>
</body>
</html>
<script>
    
    document.querySelectorAll('.add-to-cart').forEach(button => {
    button.addEventListener('click', function() {
        const productId = this.getAttribute('data-id');

        // Check product stock before adding to cart
        checkStock(productId)
            .then(response => {
                if (response.inStock) {
                    const product = {
                        id: productId,
                        name: this.getAttribute('data-name'),
                        price: parseFloat(this.getAttribute('data-price')),
                        productImage: this.getAttribute('data-image')
                    };

                    // Check if adding would exceed stock
                    if (response.userQuantity < response.availableStock) {
                        addToCart(product)
                            .then(() => {
                                // Check for limited stock after adding
                                if (response.userQuantity + 1 > 5) {
                                    showLimitedStockAlert(`You already have 5 in your cart.`);
                                }
                            });
                    } else {
                        showOutOfStockAlert();
                    }
                } else {
                    showOutOfStockAlert();
                }
            })
            .catch(error => {
                console.error('Error checking stock:', error);
            });
    });
});

// Check product stock function
function checkStock(productId) {
    return axios.post(`/cart/check-stock/${productId}`)
        .then(response => response.data)
        .catch(error => {
            console.error('Error checking stock:', error);
            return { inStock: false, userQuantity: 0, availableStock: 0 };
        });
}

// Add to cart function

const number = document.getElementById('btn.value')
console.log(number);

function addToCart(product) {
    const cartItem = {
        productId: product.id,
        name: product.name,
        price: product.price,
        quantity: 1,
        imageUrl: product.productImage
    };

    return axios.post(`/cart/add/${window.userId}`, cartItem)
        .then(response => {
            showSuccessAlert('Product added to cart successfully!');
            const cart = document.querySelector('.cart_notify')
            let cartCount = cart.setAttribute('data-notify',response.data.cartTotal)
        })
        .catch(error => {
            console.error('Error adding to cart:', error);
            showLimitedStockAlert('You already have limited product in your cart.');
        });
}

// Show out of stock alert
function showOutOfStockAlert() {
    Swal.fire({
        icon: 'warning',
        title: 'Out of Stock',
        text: 'This product is currently unavailable.',
        confirmButtonText: 'OK'
    });
}

// Function to show the limited stock alert
function showLimitedStockAlert(message) {
    Swal.fire({
        icon: 'info',
        title: 'Limited Stock',
        text: message,
        confirmButtonText: 'OK'
    });
}

// Function to show the success alert
function showSuccessAlert(message) {
    Swal.fire({
        icon: 'success',
        title: 'Success',
        text: message,
        confirmButtonText: 'OK'
    });
}

</script>